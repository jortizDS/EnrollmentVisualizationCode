x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
# xlim(((min_max[1]-1)), min_max[2]+1)  +
geom_text(
data = conc_list[[2]] %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FY, y = TotalBar,
label = ifelse(input$year == FY & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
plot_list <- lapply(conc_list, function(df) {
# conc_list[[6]] %>%
#ungroup() %>%
#df = df %>%
# mutate(FYear = as.numeric(paste0("20", substr(Year, 2, 3))),
#       Semester = factor(Semester, levels = rev(c("fa", "sp", "su")), ordered = TRUE))
missing_years =  min_max[!(min_max %in% df$Year)]
OG_copy <- df[1,] %>% mutate(Year  = NA, Semester = "fa",
FiscalYear = NA, FY = NA,
Total = 0)
df = bind_rows(lapply(1:length(missing_years), function(x) {
OG_copy_x = OG_copy  %>%
mutate(Year  = as.character(missing_years[x]),
FY = paste0("'", as.character(missing_years[x])))
OG_copy_x
})%>% bind_rows(), df)
#conc_list[[2]] %>%
df %>%
ggplot(aes(x = FY, y = Total, fill = Semester)) +
geom_col() +
theme_minimal() +
# Major_total
labs(title = paste(unique(df$`Major Name`), "Major concentration:", unique(df$`Concentration Name (if any)`)),
x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
# xlim(((min_max[1]-1)), min_max[2]+1)  +
geom_text(
data = df %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FY, y = TotalBar,
label = ifelse(input$year == FY & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
# geom_text(aes(label = ifelse(input$year == FYear &
#                                grepl(substr(input$semester, 1, 2), Semester, ignore.case = T), paste0(toupper(Semester), ": \n", Total), NA)),
#           vjust = -.5, size = 3)
})
conc_list
df=conc_list[[1]]
missing_years =  min_max[!(min_max %in% df$Year)]
missing_years
min_max[!(min_max %in% df$Year)]
min_max
df$Year
(min_max %in% df$Year)
missing_years =  min_max[!(min_max %in% df$Year)]
OG_copy <- df[1,] %>% mutate(Year  = NA, Semester = "fa",
FiscalYear = NA, FY = NA,
Total = 0)
df = bind_rows(lapply(1:length(missing_years), function(x) {
OG_copy_x = OG_copy  %>%
mutate(Year  = as.character(missing_years[x]),
FY = paste0("'", as.character(missing_years[x])))
OG_copy_x
})%>% bind_rows(), df)
missing_years =  min_max[!(min_max %in% df$Year)]
OG_copy <- df[1,] %>% mutate(Year  = NA, Semester = "fa",
FiscalYear = NA, FY = NA,
Total = 0)
if (length(missing_years) > 0) {
df = bind_rows(lapply(1:length(missing_years), function(x) {
OG_copy_x = OG_copy  %>%
mutate(Year  = as.character(missing_years[x]),
FY = paste0("'", as.character(missing_years[x])))
OG_copy_x
})%>% bind_rows(), df)
}
conc_orders <- all_data %>%
#conc_list[[1]] %>%
filter(Semester ==  ifelse(input$semester == "Fall", "fa",
ifelse(input$semester == "Spring", "sp",
ifelse(input$semester == "Summer", "su", NA)))) %>%
filter(Year == substr(input$year, 3, 4)) %>%
arrange(desc(Total)) %>%
pull(`Concentration Name (if any)`)
## insert grid.arrange
all_data$`Concentration Name (if any)` = factor(all_data$`Concentration Name (if any)`, levels = (conc_orders), ordered = T)
conc_list <- split(all_data, all_data$`Concentration Name (if any)`)
min_max = sort(unique(all_data$Year))
missing_years =  min_max[!(min_max %in% df$Year)]
OG_copy <- df[1,] %>% mutate(Year  = NA, Semester = "fa",
FiscalYear = NA, FY = NA,
Total = 0)
if (length(missing_years) > 0) {
df = bind_rows(lapply(1:length(missing_years), function(x) {
OG_copy_x = OG_copy  %>%
mutate(Year  = as.character(missing_years[x]),
FY = paste0("'", as.character(missing_years[x])))
OG_copy_x
})%>% bind_rows(), df)
}
#conc_list[[2]] %>%
df %>%
ggplot(aes(x = FY, y = Total, fill = Semester)) +
geom_col() +
theme_minimal() +
# Major_total
labs(title = paste(unique(df$`Major Name`), "Major concentration:", unique(df$`Concentration Name (if any)`)),
x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
# xlim(((min_max[1]-1)), min_max[2]+1)  +
geom_text(
data = df %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FY, y = TotalBar,
label = ifelse(input$year == FY & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
min_max[!(min_max %in% df$Year)]
missing_years
df
missing_years
(length(missing_years) > 0)
df %>%
ggplot(aes(x = FY, y = Total, fill = Semester)) +
geom_col() +
theme_minimal()
df
OG_copy <- df[1,] %>% mutate(Year  = NA, Semester = "sp",
FiscalYear = NA, FY = NA,
Total = 0)
if (length(missing_years) > 0) {
df = bind_rows(lapply(1:length(missing_years), function(x) {
OG_copy_x = OG_copy  %>%
mutate(Year  = as.character(missing_years[x]),
FY = paste0("'", as.character(missing_years[x])))
OG_copy_x
})%>% bind_rows(), df)
}
#conc_list[[2]] %>%
df %>%
ggplot(aes(x = FY, y = Total, fill = Semester)) +
geom_col() +
theme_minimal() +
# Major_total
labs(title = paste(unique(df$`Major Name`), "Major concentration:", unique(df$`Concentration Name (if any)`)),
x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
# xlim(((min_max[1]-1)), min_max[2]+1)  +
geom_text(
data = df %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FY, y = TotalBar,
label = ifelse(input$year == FY & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
df
input$year
#conc_list[[2]] %>%
df %>%
ggplot(aes(x = FY, y = Total, fill = Semester)) +
geom_col() +
theme_minimal() +
# Major_total
labs(title = paste(unique(df$`Major Name`), "Major concentration:", unique(df$`Concentration Name (if any)`)),
x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
# xlim(((min_max[1]-1)), min_max[2]+1)  +
geom_text(
data = df %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FY, y = TotalBar,
label = ifelse(substr(input$year, 3, 4) == FY & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
substr(input$year, 3, 4)
FY
df %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop")
#conc_list[[2]] %>%
df %>%
ggplot(aes(x = FY, y = Total, fill = Semester)) +
geom_col() +
theme_minimal() +
# Major_total
labs(title = paste(unique(df$`Major Name`), "Major concentration:", unique(df$`Concentration Name (if any)`)),
x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
# xlim(((min_max[1]-1)), min_max[2]+1)  +
geom_text(
data = df %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FY, y = TotalBar,
label = ifelse(substr(input$year, 3, 4) == (Year) & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
#conc_list[[2]] %>%
df %>%
ggplot(aes(x = FY, y = Total, fill = Semester)) +
geom_col() +
theme_minimal() +
# Major_total
labs(title = paste(unique(df$`Major Name`), "Major concentration:", unique(df$`Concentration Name (if any)`)),
x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
# xlim(((min_max[1]-1)), min_max[2]+1)  +
geom_text(
data = df %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FY, y = TotalBar,
label = ifelse(substr(input$year, 3, 4) == (Year) & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), Year, ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
TSplot +
# Major_total
labs(title = "Enrollment over Time by Major concentration", x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
facet_wrap(~ factor(`Concentration Name (if any)`, levels = conc_orders, ordered = T), scales = "free_y", ncol = 1) +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
geom_text(
data = df %>%
dplyr::group_by(FYear) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FYear, y = TotalBar,
label = ifelse(input$year == FYear & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
TSplot +
# Major_total
labs(title = "Enrollment over Time by Major concentration", x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
facet_wrap(~ factor(`Concentration Name (if any)`, levels = conc_orders, ordered = T), scales = "free_y", ncol = 1) +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
geom_text(
data = df %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FY, y = TotalBar,
label = ifelse(substr(input$year, 3, 4) == Year & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), Year, ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
input
input$conc = F
input$degreeYN
input$degreeYN=T
all_data <- purrr::map_dfr(files, read_filter)
degree_orders <- all_data %>%
#conc_list[[1]] %>%
filter(Semester ==  ifelse(input$semester == "Fall", "fa",
ifelse(input$semester == "Spring", "sp",
ifelse(input$semester == "Summer", "su", NA)))) %>%
filter(substr(Year,2,3) == substr(input$year, 3, 4)) %>%
arrange(desc(Total)) %>%
pull(Degree)
degree_orders
all_data
substr(Year,2,3)
rm(Year)
all_data %>%
#conc_list[[1]] %>%
filter(Semester ==  ifelse(input$semester == "Fall", "fa",
ifelse(input$semester == "Spring", "sp",
ifelse(input$semester == "Summer", "su", NA))))
degree_orders <- all_data %>%
#conc_list[[1]] %>%
filter(Semester ==  ifelse(input$semester == "Fall", "fa",
ifelse(input$semester == "Spring", "sp",
ifelse(input$semester == "Summer", "su", NA)))) %>%
filter(Year == substr(input$year, 3, 4)) %>%
arrange(desc(Total)) %>%
pull(Degree)
degree_orders
(length(degree_orders) > 1)
## insert grid.arrange
all_data$Degree = factor(all_data$Degree, levels = (degree_orders), ordered = T)
degree_list <- split(all_data, all_data$Degree)
deg_min_max = sort(unique(all_data$Year))
deg_min_max
df=conc_list[[1]]
missing_years =  deg_min_max[!(deg_min_max %in% df$Year)]
OG_copy <- df[1,] %>% mutate(Year  = NA, Semester = "sp",
FiscalYear = NA, FY = NA,
Total = 0)
missing_years
df
df[1,] %>% mutate(Year  = NA, Semester = "sp",
FiscalYear = NA, FY = NA,
Total = 0)
OG_copy <- df[1,] %>% mutate(Year  = NA, Semester = "sp",
FiscalYear = NA, FY = NA,
Total = 0)
if (length(missing_years) > 0) {
df = bind_rows(lapply(1:length(missing_years), function(x) {
OG_copy_x = OG_copy  %>%
mutate(Year  = as.character(missing_years[x]),
FY = paste0("'", as.character(missing_years[x])))
OG_copy_x
})%>% bind_rows(), df)
}
df %>%
ggplot(aes(x = FY, y = Total, fill = Semester)) +
geom_col() +
theme_minimal() +
# Major_total
labs(title = paste(input$level, unique(df$`Major Name`), "Program enrollment by Degree:", unique(df$Degree)),
x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
xlim(deg_min_max[1]-1, deg_min_max[2]+1)  +
geom_text(
data = df %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FY, y = TotalBar,
label = ifelse(substr(input$year, 3, 4) == Year & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), Year, ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
df %>%
ggplot(aes(x = FY, y = Total, fill = Semester)) +
geom_col() +
theme_minimal() +
# Major_total
labs(title = paste(input$level, unique(df$`Major Name`), "Program enrollment by Degree:", unique(df$Degree)),
x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
geom_text(
data = df %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FY, y = TotalBar,
label = ifelse(substr(input$year, 3, 4) == Year & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), Year, ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
TSplot <- all_data %>%
ggplot(aes(x = FY, y = Total, fill = Semester)) +
geom_col() +
theme_minimal() +
labs(title = "Major Enrollment over Time", x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
theme(axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12))
TSplot
TSplot +
# Major_total
labs(title = "Enrollment over Time by Degree", x = "Fiscal Year", y = "Enrollment",
subtitle = "Please note: Fall semesters are shown under the next Fiscal Year e.g. Fall 2024 appears in FY25") +
facet_wrap(~ factor(Degree, levels = degree_orders, ordered = T), scales = "free_y", ncol = 1) +
theme(legend.position = "right", legend.justification = "top",
strip.text.x = element_text(size = 15),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 15),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
axis.title = element_text(size = 13),
strip.background = element_rect(fill = "lightgray", color = NA)) +
geom_text(
data = all_data %>%
dplyr::group_by(Year) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = Year, y = TotalBar,
label = ifelse(substr(input$year, 3, 4) == substr(Year, 2,3 ) & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
TSplot +
geom_text(
data = all_data %>%
dplyr::group_by(FY) %>%
dplyr::mutate(TotalBar = sum(Total), .groups = "drop"),
aes(x = FY, y = TotalBar,
label = ifelse(substr(input$year, 3, 4) == Year & grepl(substr(input$semester, 1, 2), Semester, ignore.case = T),
paste0(toupper(substr(input$semester, 1, 2)), substr(input$year, 3, 4), ": \n", Total), NA)),
inherit.aes = FALSE,   # <-- important
vjust = -0.5, size = 3
)
runApp('app_copy.R')
library(shiny); runApp('app_copy.R')
runApp('app_copy.R')
runApp('app_copy.R')
runApp('app_copy.R')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# load libraries
install.packages("shinyjs")
library(rsconnect)
rsconnect::writeManifest
install.packages('rsconnect')
library(rsconnect)
rsconnect::writeManifest
install.packages("rconnect")
install.packages("https://cran.r-project.org/src/contrib/Archive/rsconnect/rsconnect_0.8.29.tar.gz", repos = NULL, type = "source")
R.version
